{"filter":false,"title":"more_agony.js","tooltip":"/more_agony.js","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":19}},"text":"#!/usr/bin/env node"},{"action":"insertText","range":{"start":{"row":0,"column":19},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":124,"column":0}},"lines":["","var flight = {","    dep_time : 21, //flight departs at 20:50 local, rounded to 21:00 ","    arr_time : 11, //flight arrives at 11:00 local","    tz_diff : -6, // flying eastbound (hard) with 6 hour time difference","    rspn : 7, // I need 7 hours of sleep per night","    normal_wake_hour : 6 // 6am","};","","flight.direction = (flight.tz_diff > 0) ? 1 : -1; // positive is westbound (easy)","flight.solutions = [ ];","","function get_agony(fl, day_length, dia)","{","    var _agony = 0;","    var traveler_bio_wake_hour = fl.normal_wake_hour;","    var days = [];","    for (var day_number = -dia; day_number <= -dia - fl.tz_diff; day_number++){","        var bedTime = 0;","\t\tif(traveler_bio_wake_hour >= flight.rspn) bedTime = traveler_bio_wake_hour - flight.rspn;","\t\telse{","\t\t\tbedTime = 24 + (traveler_bio_wake_hour - flight.rspn);","\t\t}","\t\t","        var day = { \"t-minus\": day_number, bio_wake_hour: traveler_bio_wake_hour, hours: [], agony : 0 };","        days.push(day);","\t\tvar ntbaForLanding = 0;","        for (var hour_number = 0; hour_number < 24; hour_number++) {","            ","            var hour = { hour_number: hour_number,","                dep_tz_night: false,","                arr_tz_night: false,","                inflight: false, ","                want_to_be_asleep: false,","                need_to_be_awake: false,","                _agony: 0 };","\t\t\t\t","            if (fl.dep_time < fl.arr_time) { // flight lands same day","                hour.inflight = day_number === 0 && hour_number >= fl.dep_time && hour_number <= fl.arr_time;","\t\t\t\t","\t\t\t\tif(hour_number == fl.arr_time) { ","\t\t\t\t\thour.need_to_be_awake = true; ","\t\t\t\t\tntbaForLanding = 2;","\t\t\t\t}","            }","            else {","                hour.inflight = (day_number == -1 && hour_number >= fl.dep_time) ||","                    (day_number == 0 && hour_number <= fl.arr_time);","\t\t\t\t\t","\t\t\t\tif(day_number == 0 &&  hour_number == fl.arr_time) { ","\t\t\t\t\tntbaForLanding = 2;","\t\t\t\t\thour.need_to_be_awake = true; ","\t\t\t\t}","            }","\t\t\t","\t\t\t// NTBA for takeoff","\t\t\tif((fl.dep_time < fl.arr_time && day_number == 0 && hour_number == fl.dep_time) ||","\t\t\t\t(fl.dep_time > fl.arr_time && day_number == -1 && hour_number == fl.dep_time)","\t\t\t\t)","\t\t\t{","\t\t\t\t// get this and the previous 2 hours and set them to NTBA","\t\t\t\thour.need_to_be_awake = true;","\t\t\t\tif(day.hours.length >= 2){","\t\t\t\t\tday.hours[day.hours.length - 1].need_to_be_awake = true;","\t\t\t\t\tday.hours[day.hours.length - 2].need_to_be_awake = true;","\t\t\t\t}","\t\t\t}","\t\t\t","\t\t\t// NTBA for landing","\t\t\tif(ntbaForLanding > 0)","\t\t\t{","\t\t\t\thour.need_to_be_awake = true;","\t\t\t\tntbaForLanding--;","\t\t\t}","            ","            var want_to_be_asleep;","            var acrossMidnight = bedTime > traveler_bio_wake_hour;","\t\t\tif(acrossMidnight)","\t\t\t{","\t\t\t\twant_to_be_asleep = hour_number >= bedTime || hour_number < traveler_bio_wake_hour;","\t\t\t}","\t\t\telse","\t\t\t{","\t\t\t\twant_to_be_asleep = hour_number >= bedTime && hour_number < traveler_bio_wake_hour;","\t\t\t}","\t\t\thour.want_to_be_asleep = want_to_be_asleep;","\t\t\t","\t\t\tif (hour.want_to_be_asleep && hour.need_to_be_awake) {","                hour._agony += 10;","            }","            if (hour.want_to_be_asleep && hour.inflight && !hour.need_to_be_awake) {","                hour._agony += 5;","            }","            ","            day.hours.push(hour);","\t\t\tday.agony += hour._agony;","        }","        traveler_bio_wake_hour += (day_length - 24);","\t\t_agony += day.agony;","    }","\t     ","    return {","        day_length: day_length,","        dia: dia,","        days: days,","\t\tagony: _agony","    };","}","","for (var days_in_advance = 0; days_in_advance <= flight.direction * flight.tz_diff; days_in_advance++) {","    flight.solutions.push(get_agony(flight, 23, days_in_advance)); // 23h days","    flight.solutions.push(get_agony(flight, 26, days_in_advance)); // 26h days","}","","flight.least_agony = 0;","","for (var solution_number = 0; solution_number < flight.solutions.length; solution_number++) {","    var solution = flight.solutions[solution_number];","    if (flight.least_agony === 0 || solution.agony < flight.least_agony) {","        flight.least_agony = solution.agony;","    }","}",""]},{"action":"insertText","range":{"start":{"row":124,"column":0},"end":{"row":124,"column":45}},"text":"console.log(JSON.stringify(flight, null, 2));"}]}]]},"ace":{"folds":[],"scrolltop":1176,"scrollleft":0,"selection":{"start":{"row":124,"column":45},"end":{"row":124,"column":45},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":83,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1415469557508,"hash":"6576af22ff4526f6463fa894bc4b415476a128f3"}